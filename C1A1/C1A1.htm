<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="c1a1.css">
  <title>PARADIGMAS DE PROGRAMAÇÃO</title>
</head>
<body>
  <h1>PARADIGMAS DE PROGRAMAÇÃO</h1>

<li>Nova linguagem = Fácil &nbsp</li>
<li>Novo paradigma = Difícil</li>

<p>_____________________________________________________________</p>
<p>| Padrões | Padrões | Padrões | Padrões | Padrões | Padrões |</p>
<p>| Projeto | Projeto | Projeto | Projeto | Projeto | Projeto |</p>
<p>|_________|_________|_________|_________|_________|_________|</p>
<p>| . . .Padrões . . .| . . .Padrões . . .| . . .Padrões . . .|</p>
<p>| . Arquiteturais . | . Arquiteturais . | . Arquiteturais . |</p>
<p>|___________________|___________________|___________________|</p>
<p>| . . . . . . . . . . . . . . . . . . . . . . . . . . . . . |</p>
<p>| . . . . . . . . . P A R A D I G M A . . . . . . . . . . . |</p>
<p>|___________________________________________________________|</p>

<p>Já existiu anti-padrões: Se um padrão de projeto ferir os princípios basiláres do Paradigma, você tem um anti-padrão</p>
<p>Dado as limitações da tecnologia da época, foi a melhor solução para desempenho e etc.</p>

<p>Qual a ideia do padrão?</p>
<p>Resolver um problema comum</p>
<p>Ex: Não quero misturar minhas regras de aplicação com interface gráfica.</p>

<p>Três principais paradigmas:</p>

<p>-----------------------------------------------</p>
<p>|. Funcional .|. .Procedural. | Orientado a Obj |</p>
<p>-----1957-----------1968-----------1980/90-----</p>

<br>

<h3>SE FOI CRIADO EM 1957, POR QUE TEVE ESSA ADOÇÃO TARDIA?</h3>
<p>Por conta das limitações da tecnologia da época. Um código funcional tende a consumir mais memoria e mais processamento,</p>
<p>porém um código funcional em questão de qualidade e reuso, é muito mais aplicável. Dada as condições das tecnologias de hoje,</p>
<p>conseguimos aplicar tranquilamente sem afetar a memória e o processamento.</p>

<p>Quando se programa proceduralmente, simplesmente se está programando sem praticamente nenhum pilar.</p>
<p>Logo quando programamos em O.O. temos uma série de regras, padrões e fatores a serem seguidos.</p>
<p>A programação funcional segue na mesma linha, você precisa aplicar varios conceitos, como:</p>

<li>Higher Order Function</li>
<li>First class Function&nbsp</li>
<li>Curring &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</li>
<li>Imutabilidade &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</li>
<li>Composição de funções</li>

<h4>ISSO GERA UM GRANDE IMPACTO NA QUALIDADE DO CÓDIGO.</h4>
</body>
</html>